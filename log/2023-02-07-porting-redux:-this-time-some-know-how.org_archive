#    -*- mode: org -*-


Archived entries from file /home/drewc/me/MuKn/src/gerbil.js/log/2023-02-07-porting-redux:-this-time-some-know-how.org


* Conclusion
:PROPERTIES:
:ARCHIVE_TIME: 2023-02-08 Wed 16:56
:ARCHIVE_FILE: ~/me/MuKn/src/gerbil.js/log/2023-02-07-porting-redux:-this-time-some-know-how.org
:ARCHIVE_CATEGORY: 2023-02-07-porting-redux:-this-time-some-know-how
:END:

So we know our bootstrap mostly works.

That's because of this.

#+begin_src sh
   ../bin/gxi -e '(display 42)' -e '(newline)' -e '(def (foo n) (+ 42 n))' -e '(begin (display (foo 0)) (newline))' -e '(begin (def bar (make-parameter foo)) (display ((bar) 42)))' -
42
42
> gx#dbug-read-modules
(("/home/drewc/me/MuKn/src/gerbil.js/gerbil/bootstrap/lib/gerbil/core.ssi"
  .
  sexp))
> (def (baz bat: (n 42)) (+ n 42))
> (baz)
84
> (baz bat: -42)
0
>
#+end_src

What is that =gx#dbug-read-modules= up to? Well, my thought is that we can track down where/how that error happens when looking at what module it cannot load.

Here's the code.

#+begin_src scheme
    (define gx#dbug-read-modules '())
  (define (gx#dbug-start-read-module path)
    (set! gx#dbug-read-modules
          (cons (cons path #f) gx#dbug-read-modules)))

  (define (gx#dbug-end-read-module path res)
    (let e ((mods gx#dbug-read-modules))
      (if (eq? (car (car mods)) path)
          (set-cdr! (car mods) res)
          (if (null? (cdr mods))
              (error "Read Module WTF?" path res)
              (e (cdr mods))))))

  (define gx#core-read-module
    (lambda (path)
      (gx#dbug-start-read-module path)
      (let* ((res 'sexp)
             (mod
              (with-exception-catcher
               (lambda (_exn14843_)
                 (if (and (datum-parsing-exception? _exn14843_)
                          (eq? (datum-parsing-exception-filepos _exn14843_) '0))
                     (begin (set! res 'lang)
                            (gx#core-read-module/lang path))
                     (raise _exn14843_)))
               (lambda () (gx#core-read-module/sexp path)))))
        (gx#dbug-end-read-module path res)
        mod)))

#+end_src

So, given that, we'll see where to look next, and go from there.

Onward hackers!
